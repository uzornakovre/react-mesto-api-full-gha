{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co/';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    try {\n      if (res.ok) {\n        return res.json();\n      }\n    } catch (error) {\n      return error;\n    }\n  }).then(res => {\n    console.log(res);\n    return res;\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\n// class Auth {\n//   constructor({ baseUrl, headers }) {\n//     this._url = baseUrl;\n//     this._headers = headers;\n//   }\n\n//   _checkStatus(res) {\n//     if (res.ok) {\n//       return res.json();\n//     } else {\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n//   }\n\n//   getUserInfo() {\n//     return fetch(`${this._url}/users/me`, {\n//       headers: this._headers\n//     }).then(this._checkStatus)\n//   }\n\n//   getInitialCards() {\n//     return fetch(`${this._url}/cards`, {\n//       headers: this._headers\n//     }).then(this._checkStatus)\n//   }\n\n//   changeUserInfo(userData) {\n//     return fetch(`${this._url}/users/me`, {\n//       method: 'PATCH',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         name:  userData.name,\n//         about: userData.about\n//       })\n//     }).then(this._checkStatus);\n//   }\n\n//   changeUserAvatar(userData) {\n//     return fetch(`${this._url}/users/me/avatar`, {\n//       method: 'PATCH',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         avatar: userData.avatar\n//       })\n//     }).then(this._checkStatus);\n//   }\n\n//   createCard(cardData) {\n//     return fetch(`${this._url}/cards`, {\n//       method: 'POST',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         name: cardData.placeName,\n//         link: cardData.placeLink\n//       })\n//     }).then(this._checkStatus)\n//   }\n\n//   deleteCard(id) {\n//     return fetch(`${this._url}/cards/${id}`, {\n//       method: 'DELETE',\n//       headers: this._headers,\n//     }).then(this._checkStatus)\n//   }\n\n//   likeCard(id, owner) {\n//     return fetch(`${this._url}/cards/${id}/likes`, {\n//       method: 'PUT',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         likes: [owner]\n//       })\n//     }).then(this._checkStatus)\n//   }\n\n//   dislikeCard(id, owner) {\n//     return fetch(`${this._url}/cards/${id}/likes`, {\n//       method: 'DELETE',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         likes: [owner]\n//       })\n//     }).then(this._checkStatus)\n//   }\n// }\n\n// export const auth = new Auth({\n//   baseUrl: 'https://auth.nomoreparties.co/',\n//   headers: {\n//     // authorization: 'a67dcede-ed6f-4bc9-92bc-dd4c6eb33b08',\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json'\n//   }\n// });","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","error","console","log","catch"],"sources":["/Users/uzornakovre/Desktop/WEBDEV/Обучение/Яндекс Практикум/Practice/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co/'; \n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((res) => {\n    try {\n      if (res.ok) {\n        return res.json();\n      }\n    } catch (error) {\n      return (error)\n    }\n  })\n  .then((res) => {\n    console.log(res);\n    return res;\n  })\n  .catch((error) => {\n    console.log(error);\n  })\n}\n\n// class Auth {\n//   constructor({ baseUrl, headers }) {\n//     this._url = baseUrl;\n//     this._headers = headers;\n//   }\n\n//   _checkStatus(res) {\n//     if (res.ok) {\n//       return res.json();\n//     } else {\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n//   }\n\n//   getUserInfo() {\n//     return fetch(`${this._url}/users/me`, {\n//       headers: this._headers\n//     }).then(this._checkStatus)\n//   }\n\n//   getInitialCards() {\n//     return fetch(`${this._url}/cards`, {\n//       headers: this._headers\n//     }).then(this._checkStatus)\n//   }\n\n//   changeUserInfo(userData) {\n//     return fetch(`${this._url}/users/me`, {\n//       method: 'PATCH',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         name:  userData.name,\n//         about: userData.about\n//       })\n//     }).then(this._checkStatus);\n//   }\n\n//   changeUserAvatar(userData) {\n//     return fetch(`${this._url}/users/me/avatar`, {\n//       method: 'PATCH',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         avatar: userData.avatar\n//       })\n//     }).then(this._checkStatus);\n//   }\n\n//   createCard(cardData) {\n//     return fetch(`${this._url}/cards`, {\n//       method: 'POST',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         name: cardData.placeName,\n//         link: cardData.placeLink\n//       })\n//     }).then(this._checkStatus)\n//   }\n\n//   deleteCard(id) {\n//     return fetch(`${this._url}/cards/${id}`, {\n//       method: 'DELETE',\n//       headers: this._headers,\n//     }).then(this._checkStatus)\n//   }\n\n//   likeCard(id, owner) {\n//     return fetch(`${this._url}/cards/${id}/likes`, {\n//       method: 'PUT',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         likes: [owner]\n//       })\n//     }).then(this._checkStatus)\n//   }\n\n//   dislikeCard(id, owner) {\n//     return fetch(`${this._url}/cards/${id}/likes`, {\n//       method: 'DELETE',\n//       headers: this._headers,\n//       body: JSON.stringify({\n//         likes: [owner]\n//       })\n//     }).then(this._checkStatus)\n//   }\n// }\n\n// export const auth = new Auth({\n//   baseUrl: 'https://auth.nomoreparties.co/',\n//   headers: {\n//     // authorization: 'a67dcede-ed6f-4bc9-92bc-dd4c6eb33b08',\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json'\n//   }\n// }); "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,gCAAgC;AAExD,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,GAAG,IAAK;IACb,IAAI;MACF,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,EAAE;MACnB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAQA,KAAK;IACf;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEC,GAAG,IAAK;IACbI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;IAChB,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDM,KAAK,CAAEH,KAAK,IAAK;IAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}