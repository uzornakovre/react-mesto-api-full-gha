{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._checkStatus);\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkStatus);\n  }\n  changeUserInfo(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    }).then(this._checkStatus);\n  }\n  changeUserAvatar(userData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: userData.avatar\n      })\n    }).then(this._checkStatus);\n  }\n  createCard(cardData) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.placeName,\n        link: cardData.placeLink\n      })\n    }).then(this._checkStatus);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkStatus);\n  }\n  likeCard(id, owner) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n      body: JSON.stringify({\n        likes: [owner]\n      })\n    }).then(this._checkStatus);\n  }\n  dislikeCard(id, owner) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n      body: JSON.stringify({\n        likes: [owner]\n      })\n    }).then(this._checkStatus);\n  }\n}\nexport const api = new Api({\n  baseUrl: 'api.i-share.students.nomoredomains.work',\n  headers: {\n    authorization: 'a67dcede-ed6f-4bc9-92bc-dd4c6eb33b08',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_url","_headers","_checkStatus","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","changeUserInfo","userData","method","body","JSON","stringify","name","about","changeUserAvatar","avatar","createCard","cardData","placeName","link","placeLink","deleteCard","id","likeCard","owner","likes","dislikeCard","api","authorization"],"sources":["/Users/uzornakovre/Desktop/WEBDEV/Обучение/Яндекс Практикум/Practice/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._checkStatus)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkStatus)\n  }\n\n  changeUserInfo(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name:  userData.name,\n        about: userData.about\n      })\n    }).then(this._checkStatus);\n  }\n\n  changeUserAvatar(userData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: userData.avatar\n      })\n    }).then(this._checkStatus);\n  }\n\n  createCard(cardData) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.placeName,\n        link: cardData.placeLink\n      })\n    }).then(this._checkStatus)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkStatus)\n  }\n\n  likeCard(id, owner) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n      body: JSON.stringify({\n        likes: [owner]\n      })\n    }).then(this._checkStatus)\n  }\n\n  dislikeCard(id, owner) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n      body: JSON.stringify({\n        likes: [owner]\n      })\n    }).then(this._checkStatus)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'api.i-share.students.nomoredomains.work',\n  headers: {\n    authorization: 'a67dcede-ed6f-4bc9-92bc-dd4c6eb33b08',\n    'Content-Type': 'application/json'\n  }\n}); "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}