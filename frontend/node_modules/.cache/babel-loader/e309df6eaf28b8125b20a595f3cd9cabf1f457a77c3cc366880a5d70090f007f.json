{"ast":null,"code":"var _jsxFileName = \"/Users/uzornakovre/Desktop/WEBDEV/\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441 \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Practice/dev/react-mesto-auth/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthForm from './AuthForm';\nimport { auth } from '../utils/auth';\nimport InfoToolTip from \"./InfoToolTip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register(_ref) {\n  _s();\n  let {\n    onOverlayClick\n  } = _ref;\n  const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false);\n  const [formValue, setFormValue] = React.useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n\n  // Отправка формы\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    console.log(formValue);\n    auth.register(formValue.email, formValue.password).then(res => {\n      console.log(res);\n      // setInfoToolTipOpened(true);\n      navigate('/sign-in', {\n        replace: true\n      });\n    }).catch(error => {\n      setInfoToolTipOpen(true);\n      console.log(error);\n    });\n  }\n\n  // Открытие/закрытие модального окна с информацией об авторизации\n\n  function openInfoToolTip() {\n    setInfoToolTipOpen(true);\n  }\n  function closeInfoToolTip() {\n    setInfoToolTipOpen(false);\n  }\n\n  // Обработчик изменений полей ввода\n\n  function handleChange(evt) {\n    setFormValue({\n      ...formValue,\n      [evt.target.name]: evt.target.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n      handleSubmit: handleSubmit,\n      handleChange: handleChange,\n      headingText: 'Регистрация',\n      submitText: 'Зарегистрироваться',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth__tip\",\n        children: [\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sign-in\",\n          className: \"auth__link\",\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n      isOpen: isInfoToolTipOpen,\n      onClose: closeInfoToolTip,\n      onOverlayClick: onOverlayClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Register, \"Rj8u2Kxg4NzmxQpFawAZVsZKWhY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Link","useNavigate","AuthForm","auth","InfoToolTip","Register","onOverlayClick","isInfoToolTipOpen","setInfoToolTipOpen","useState","formValue","setFormValue","email","password","navigate","handleSubmit","evt","preventDefault","console","log","register","then","res","replace","catch","error","openInfoToolTip","closeInfoToolTip","handleChange","target","name","value"],"sources":["/Users/uzornakovre/Desktop/WEBDEV/Обучение/Яндекс Практикум/Practice/dev/react-mesto-auth/src/components/Register.js"],"sourcesContent":["import React                 from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthForm              from './AuthForm';\nimport { auth }              from '../utils/auth';\nimport InfoToolTip           from \"./InfoToolTip\";\n\nfunction Register({ onOverlayClick }) {\n\n  const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false);\n  const [formValue,  setFormValue ] = React.useState({\n    email: '',\n    password: ''\n  })\n  const navigate = useNavigate();\n\n  // Отправка формы\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    console.log(formValue);\n\n    auth.register(formValue.email, formValue.password)\n      .then((res) => {\n        console.log(res);\n        // setInfoToolTipOpened(true);\n        navigate('/sign-in', {replace: true});\n      })\n      .catch((error) =>{\n        setInfoToolTipOpen(true);\n        console.log(error);\n      })\n  }\n\n  // Открытие/закрытие модального окна с информацией об авторизации\n\n  function openInfoToolTip() {\n    setInfoToolTipOpen(true);\n  }\n\n  function closeInfoToolTip() {\n    setInfoToolTipOpen(false);\n  }\n\n  // Обработчик изменений полей ввода\n\n  function handleChange(evt) {\n    setFormValue({\n      ...formValue,\n      [evt.target.name]: evt.target.value\n    }) \n  }\n\n  return (\n    <>\n      <AuthForm handleSubmit={handleSubmit}\n                handleChange={handleChange}\n                headingText={'Регистрация'}\n                submitText={'Зарегистрироваться'}\n      >\n          <p className=\"auth__tip\">\n            Уже зарегистрированы? {<Link to=\"/sign-in\" className=\"auth__link\">\n                                    Войти\n                                  </Link>}\n          </p>\n      </AuthForm>\n      <InfoToolTip isOpen={isInfoToolTipOpen}\n                   onClose={closeInfoToolTip}\n                   onOverlayClick={onOverlayClick}\n      />\n    </>\n  );\n}\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAsB,OAAO;AACzC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,QAAQ,MAAmB,YAAY;AAC9C,SAASC,IAAI,QAAqB,eAAe;AACjD,OAAOC,WAAW,MAAgB,eAAe;AAAC;AAAA;AAElD,SAASC,QAAQ,OAAqB;EAAA;EAAA,IAApB;IAAEC;EAAe,CAAC;EAElC,MAAM,CAACC,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACC,SAAS,EAAGC,YAAY,CAAE,GAAGZ,KAAK,CAACU,QAAQ,CAAC;IACjDG,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGb,WAAW,EAAE;;EAE9B;;EAEA,SAASc,YAAY,CAACC,GAAG,EAAE;IACzBA,GAAG,CAACC,cAAc,EAAE;IACpBC,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;IAEtBP,IAAI,CAACiB,QAAQ,CAACV,SAAS,CAACE,KAAK,EAAEF,SAAS,CAACG,QAAQ,CAAC,CAC/CQ,IAAI,CAAEC,GAAG,IAAK;MACbJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAChB;MACAR,QAAQ,CAAC,UAAU,EAAE;QAACS,OAAO,EAAE;MAAI,CAAC,CAAC;IACvC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAI;MACfjB,kBAAkB,CAAC,IAAI,CAAC;MACxBU,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;;EAEA;;EAEA,SAASC,eAAe,GAAG;IACzBlB,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,SAASmB,gBAAgB,GAAG;IAC1BnB,kBAAkB,CAAC,KAAK,CAAC;EAC3B;;EAEA;;EAEA,SAASoB,YAAY,CAACZ,GAAG,EAAE;IACzBL,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACM,GAAG,CAACa,MAAM,CAACC,IAAI,GAAGd,GAAG,CAACa,MAAM,CAACE;IAChC,CAAC,CAAC;EACJ;EAEA,oBACE;IAAA,wBACE,QAAC,QAAQ;MAAC,YAAY,EAAEhB,YAAa;MAC3B,YAAY,EAAEa,YAAa;MAC3B,WAAW,EAAE,aAAc;MAC3B,UAAU,EAAE,oBAAqB;MAAA,uBAEvC;QAAG,SAAS,EAAC,WAAW;QAAA,WAAC,uHACD,eAAC,QAAC,IAAI;UAAC,EAAE,EAAC,UAAU;UAAC,SAAS,EAAC,YAAY;UAAA,UAAC;QAE5C;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAC3B;MAAA;MAAA;MAAA;IAAA,QACG,eACX,QAAC,WAAW;MAAC,MAAM,EAAErB,iBAAkB;MAC1B,OAAO,EAAEoB,gBAAiB;MAC1B,cAAc,EAAErB;IAAe;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA,gBACD;AAEP;AAAC,GAjEQD,QAAQ;EAAA,QAOEJ,WAAW;AAAA;AAAA,KAPrBI,QAAQ;AAmEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}